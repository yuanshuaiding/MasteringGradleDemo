plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

println("解析build script:${project.name}")

android {
    namespace 'com.eric.manager.mylibrary1'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

afterEvaluate {
    //打印依赖集
    println("$name evaluate结束，依赖规则（Configuration）如下：")
    configurations.forEach(conf->{
        println("  -->"+conf.name)
        //打印一个示例，如implementation
        if(conf.name=="implementation"){
            println("  implementation对应的Configuration依赖有：")
            conf.allDependencies.forEach(depend->{
                println("    -->${depend.group}")
            })
        }
    })
}

dependencies {
    implementation platform(project(":platform"))
    //不指定版本号，通过platform模块的约束来指定
    implementation 'androidx.appcompat:appcompat'
    implementation 'com.google.android.material:material'
    //通过ext读取版本号
    implementation "androidx.core:core-ktx:${kt_version}"
    testImplementation 'junit:junit'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}